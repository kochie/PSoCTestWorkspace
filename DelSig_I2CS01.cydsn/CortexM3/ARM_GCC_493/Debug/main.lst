ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 307800   		.ascii	"0x\000"
  22 0003 00       		.align	2
  23              	.LC1:
  24 0004 49324320 		.ascii	"I2C Error!\000"
  24      4572726F 
  24      722100
  25 000f 00       		.section	.text.main,"ax",%progbits
  26              		.align	2
  27              		.global	main
  28              		.thumb
  29              		.thumb_func
  30              		.type	main, %function
  31              	main:
  32              	.LFB63:
  33              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** *  This is source code for the 8-ch DelSig ADC and I2C Slave Example Project.
   8:.\main.c      **** *
   9:.\main.c      **** * Parameters used:
  10:.\main.c      **** *  I2C Slave
  11:.\main.c      **** *   Implementation        Fixed function
  12:.\main.c      **** *   Data rate            100kbps
  13:.\main.c      **** *   SDA SCL config         Open drain, drives low
  14:.\main.c      **** *   Pull-up resistors    2.67k each
  15:.\main.c      **** *    Address                8
  16:.\main.c      **** *    Address decode        Hardware
  17:.\main.c      **** *
  18:.\main.c      **** *  Delta Sigma ADC
  19:.\main.c      **** *      Conversion mode     1-Multi Sample
  20:.\main.c      **** *    Resolution            16 bits
  21:.\main.c      **** *    Conversion Rate        5000 SPS
  22:.\main.c      **** *    Input mode            Differential
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 2


  23:.\main.c      **** *
  24:.\main.c      **** *  IDAC
  25:.\main.c      **** *    Polarity            Positive
  26:.\main.c      **** *    Range                0-31.875 uA
  27:.\main.c      **** *    Speed                Slow
  28:.\main.c      **** *    Output Current        10uA
  29:.\main.c      **** *
  30:.\main.c      **** *  Sequencing Max
  31:.\main.c      **** *    Mux type            Differential
  32:.\main.c      **** *    Channels            8
  33:.\main.c      **** *
  34:.\main.c      **** * In this project, data converted by the 8-channel, sequenced ADC is sent via
  35:.\main.c      **** * I2C. The main project containing an I2C slave is tested with a separate
  36:.\main.c      **** * project containing an I2C master. The data output by the ADC is made
  37:.\main.c      **** * visible on an Character LCD. This can be used to verify the data
  38:.\main.c      **** * received by the I2C master which is also displayed on an LCD screen.
  39:.\main.c      **** *
  40:.\main.c      **** * The communication flow is as follows:
  41:.\main.c      **** * When the device is reset, all components are started and an initial ADC
  42:.\main.c      **** * reading is taken. This is stored in the read buffer of the I2C slave and
  43:.\main.c      **** * the ADC is stopped. Then the infinite 'for' loop begins. Only if the correct
  44:.\main.c      **** * number of bytes of the read buffer are read by the I2C master, a new reading
  45:.\main.c      **** * is taken from the ADC and the loop continues.
  46:.\main.c      **** *
  47:.\main.c      **** ********************************************************************************
  48:.\main.c      **** * Copyright 2012, Cypress Semiconductor Corporation. All rights reserved.
  49:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  50:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  51:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  52:.\main.c      **** * accompanying the software package from which you obtained this software.
  53:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  54:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  55:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  56:.\main.c      **** *******************************************************************************/
  57:.\main.c      **** #include <device.h>
  58:.\main.c      **** 
  59:.\main.c      **** /* Set the write buffer length to be 16 bites or 2 bytes */
  60:.\main.c      **** #define RD_BUFFER_SIZE        (2u)
  61:.\main.c      **** 
  62:.\main.c      **** 
  63:.\main.c      **** /*******************************************************************************
  64:.\main.c      **** * Function Name: main
  65:.\main.c      **** ********************************************************************************
  66:.\main.c      **** *
  67:.\main.c      **** * Summary:
  68:.\main.c      **** *  main function performs following functions:
  69:.\main.c      **** *   1. Starts all used components.
  70:.\main.c      **** *   2. Controls sequencing of ADC inputs.
  71:.\main.c      **** *   3. Reads ADC converted data, puts this in a read buffer to be read by the
  72:.\main.c      **** *       I2C Master.
  73:.\main.c      **** *   4. Displays ADC converted data on Character LCD.
  74:.\main.c      **** *
  75:.\main.c      **** * Parameters:
  76:.\main.c      **** *  None.
  77:.\main.c      **** *
  78:.\main.c      **** * Return:
  79:.\main.c      **** *  None.
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 3


  80:.\main.c      **** *
  81:.\main.c      **** *******************************************************************************/
  82:.\main.c      **** int main()
  83:.\main.c      **** {
  34              		.loc 1 83 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  84:.\main.c      ****     /* To conserve memory space, set up temporary variable for storing ADC
  85:.\main.c      ****      * converted values and the write buffer as a union.
  86:.\main.c      ****      */
  87:.\main.c      **** 
  88:.\main.c      ****     uint8 byteCount = 0u;
  46              		.loc 1 88 0
  47 0006 0023     		movs	r3, #0
  48 0008 7B71     		strb	r3, [r7, #5]
  89:.\main.c      ****     uint8 sample_segment[RD_BUFFER_SIZE];
  90:.\main.c      ****     uint16 sample_full = 0u;
  49              		.loc 1 90 0
  50 000a 0023     		movs	r3, #0
  51 000c FB80     		strh	r3, [r7, #6]	@ movhi
  91:.\main.c      **** 
  92:.\main.c      ****     /* Set up slave read data buffer */
  93:.\main.c      ****     I2CS_SlaveInitReadBuf((uint8 *) sample_segment, RD_BUFFER_SIZE);
  52              		.loc 1 93 0
  53 000e 3B46     		mov	r3, r7
  54 0010 1846     		mov	r0, r3
  55 0012 0221     		movs	r1, #2
  56 0014 FFF7FEFF 		bl	I2CS_SlaveInitReadBuf
  94:.\main.c      **** 
  95:.\main.c      ****     I2CS_Start();
  57              		.loc 1 95 0
  58 0018 FFF7FEFF 		bl	I2CS_Start
  96:.\main.c      ****     IDAC8_Start();
  59              		.loc 1 96 0
  60 001c FFF7FEFF 		bl	IDAC8_Start
  97:.\main.c      **** 
  98:.\main.c      ****     /* The Start API for Mux sets it up, but disconnects all the channels.
  99:.\main.c      ****      * To connect the first channel, call the 'AMuxSeq_Next' function
 100:.\main.c      ****      */
 101:.\main.c      ****     AMuxSeq_Start();
  61              		.loc 1 101 0
  62 0020 FFF7FEFF 		bl	AMuxSeq_Start
 102:.\main.c      ****     AMuxSeq_Next();
  63              		.loc 1 102 0
  64 0024 FFF7FEFF 		bl	AMuxSeq_Next
 103:.\main.c      **** 
 104:.\main.c      ****     LCD_Char_Start();
  65              		.loc 1 104 0
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 4


  66 0028 FFF7FEFF 		bl	LCD_Char_Start
 105:.\main.c      ****     ADC_DelSig_Start();
  67              		.loc 1 105 0
  68 002c FFF7FEFF 		bl	ADC_DelSig_Start
 106:.\main.c      ****     ADC_DelSig_StartConvert();
  69              		.loc 1 106 0
  70 0030 FFF7FEFF 		bl	ADC_DelSig_StartConvert
 107:.\main.c      **** 
 108:.\main.c      ****     /* Enable global interrupts - needed for I2C operation */
 109:.\main.c      ****     CyGlobalIntEnable;
  71              		.loc 1 109 0
  72              	@ 109 ".\main.c" 1
  73 0034 62B6     		CPSIE   i
  74              	@ 0 "" 2
  75              		.thumb
  76              	.L4:
 110:.\main.c      **** 
 111:.\main.c      ****     for(;;)
 112:.\main.c      ****     {
 113:.\main.c      ****         /* Check if the slave buffer has been read */
 114:.\main.c      ****         if(I2CS_SlaveStatus() & I2CS_SSTAT_RD_CMPLT)
  77              		.loc 1 114 0
  78 0036 FFF7FEFF 		bl	I2CS_SlaveStatus
  79 003a 0346     		mov	r3, r0
  80 003c 03F00103 		and	r3, r3, #1
  81 0040 002B     		cmp	r3, #0
  82 0042 32D0     		beq	.L2
 115:.\main.c      ****         {
 116:.\main.c      ****             ADC_DelSig_StartConvert();
  83              		.loc 1 116 0
  84 0044 FFF7FEFF 		bl	ADC_DelSig_StartConvert
 117:.\main.c      ****             ADC_DelSig_IsEndConversion(ADC_DelSig_WAIT_FOR_RESULT);
  85              		.loc 1 117 0
  86 0048 0020     		movs	r0, #0
  87 004a FFF7FEFF 		bl	ADC_DelSig_IsEndConversion
 118:.\main.c      ****             ADC_DelSig_StopConvert();
  88              		.loc 1 118 0
  89 004e FFF7FEFF 		bl	ADC_DelSig_StopConvert
 119:.\main.c      ****             AMuxSeq_Next();
  90              		.loc 1 119 0
  91 0052 FFF7FEFF 		bl	AMuxSeq_Next
 120:.\main.c      ****         
 121:.\main.c      ****             byteCount = I2CS_SlaveGetReadBufSize();
  92              		.loc 1 121 0
  93 0056 FFF7FEFF 		bl	I2CS_SlaveGetReadBufSize
  94 005a 0346     		mov	r3, r0
  95 005c 7B71     		strb	r3, [r7, #5]
 122:.\main.c      ****             I2CS_SlaveClearReadStatus();
  96              		.loc 1 122 0
  97 005e FFF7FEFF 		bl	I2CS_SlaveClearReadStatus
 123:.\main.c      ****             I2CS_SlaveClearReadBuf();
  98              		.loc 1 123 0
  99 0062 FFF7FEFF 		bl	I2CS_SlaveClearReadBuf
 124:.\main.c      **** 
 125:.\main.c      ****             /* If both bytes of the read buffer have been read */
 126:.\main.c      ****             if(byteCount == RD_BUFFER_SIZE)
 100              		.loc 1 126 0
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 5


 101 0066 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 102 0068 022B     		cmp	r3, #2
 103 006a 18D1     		bne	.L3
 127:.\main.c      ****             {
 128:.\main.c      ****                 /* Display data that was placed in the buffer on the LCD and verify
 129:.\main.c      ****                  * this is same as that received by master */
 130:.\main.c      ****                 LCD_Char_ClearDisplay();
 104              		.loc 1 130 0
 105 006c 0120     		movs	r0, #1
 106 006e FFF7FEFF 		bl	LCD_Char_WriteControl
 131:.\main.c      ****                 LCD_Char_PrintString("0x");
 107              		.loc 1 131 0
 108 0072 0E48     		ldr	r0, .L5
 109 0074 FFF7FEFF 		bl	LCD_Char_PrintString
 132:.\main.c      ****                 LCD_Char_PrintInt16(sample_full);
 110              		.loc 1 132 0
 111 0078 FB88     		ldrh	r3, [r7, #6]
 112 007a 1846     		mov	r0, r3
 113 007c FFF7FEFF 		bl	LCD_Char_PrintInt16
 133:.\main.c      **** 
 134:.\main.c      ****                 /* Disable the interrupts when writing to the Read buffer
 135:.\main.c      ****                  * so that the Master cannot read the slave buffer during the act of writing
 136:.\main.c      ****                  * to the buffer.
 137:.\main.c      ****                  */
 138:.\main.c      ****                 CyGlobalIntDisable;
 114              		.loc 1 138 0
 115              	@ 138 ".\main.c" 1
 116 0080 72B6     		CPSID   i
 117              	@ 0 "" 2
 139:.\main.c      ****                 sample_full = ADC_DelSig_GetResult16();
 118              		.loc 1 139 0
 119              		.thumb
 120 0082 FFF7FEFF 		bl	ADC_DelSig_GetResult16
 121 0086 0346     		mov	r3, r0
 122 0088 FB80     		strh	r3, [r7, #6]	@ movhi
 140:.\main.c      ****                 sample_segment[0] = sample_full >> 8u & 0x00FF;
 123              		.loc 1 140 0
 124 008a FB88     		ldrh	r3, [r7, #6]
 125 008c 1B0A     		lsrs	r3, r3, #8
 126 008e 9BB2     		uxth	r3, r3
 127 0090 DBB2     		uxtb	r3, r3
 128 0092 3B70     		strb	r3, [r7]
 141:.\main.c      ****                 sample_segment[1] = sample_full & 0x00FF;
 129              		.loc 1 141 0
 130 0094 FB88     		ldrh	r3, [r7, #6]	@ movhi
 131 0096 DBB2     		uxtb	r3, r3
 132 0098 7B70     		strb	r3, [r7, #1]
 142:.\main.c      ****                 CyGlobalIntEnable;
 133              		.loc 1 142 0
 134              	@ 142 ".\main.c" 1
 135 009a 62B6     		CPSIE   i
 136              	@ 0 "" 2
 137              		.thumb
 138 009c 05E0     		b	.L2
 139              	.L3:
 143:.\main.c      ****             }
 144:.\main.c      **** 
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 6


 145:.\main.c      ****             else /* Wrong number of bytes read - place error handling code here */
 146:.\main.c      ****             {
 147:.\main.c      ****                 LCD_Char_ClearDisplay();
 140              		.loc 1 147 0
 141 009e 0120     		movs	r0, #1
 142 00a0 FFF7FEFF 		bl	LCD_Char_WriteControl
 148:.\main.c      ****                 LCD_Char_PrintString("I2C Error!");
 143              		.loc 1 148 0
 144 00a4 0248     		ldr	r0, .L5+4
 145 00a6 FFF7FEFF 		bl	LCD_Char_PrintString
 146              	.L2:
 149:.\main.c      ****             }
 150:.\main.c      ****         }
 151:.\main.c      ****     } /* End of forever loop */
 147              		.loc 1 151 0
 148 00aa C4E7     		b	.L4
 149              	.L6:
 150              		.align	2
 151              	.L5:
 152 00ac 00000000 		.word	.LC0
 153 00b0 04000000 		.word	.LC1
 154              		.cfi_endproc
 155              	.LFE63:
 156              		.size	main, .-main
 157              		.text
 158              	.Letext0:
 159              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 160              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 161              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 162              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 163              		.section	.debug_info,"",%progbits
 164              	.Ldebug_info0:
 165 0000 17010000 		.4byte	0x117
 166 0004 0400     		.2byte	0x4
 167 0006 00000000 		.4byte	.Ldebug_abbrev0
 168 000a 04       		.byte	0x4
 169 000b 01       		.uleb128 0x1
 170 000c E0000000 		.4byte	.LASF20
 171 0010 01       		.byte	0x1
 172 0011 6E010000 		.4byte	.LASF21
 173 0015 7B000000 		.4byte	.LASF22
 174 0019 00000000 		.4byte	.Ldebug_ranges0+0
 175 001d 00000000 		.4byte	0
 176 0021 00000000 		.4byte	.Ldebug_line0
 177 0025 02       		.uleb128 0x2
 178 0026 01       		.byte	0x1
 179 0027 06       		.byte	0x6
 180 0028 8B010000 		.4byte	.LASF0
 181 002c 02       		.uleb128 0x2
 182 002d 01       		.byte	0x1
 183 002e 08       		.byte	0x8
 184 002f C4000000 		.4byte	.LASF1
 185 0033 02       		.uleb128 0x2
 186 0034 02       		.byte	0x2
 187 0035 05       		.byte	0x5
 188 0036 B3010000 		.4byte	.LASF2
 189 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 7


 190 003b 02       		.byte	0x2
 191 003c 07       		.byte	0x7
 192 003d 0E000000 		.4byte	.LASF3
 193 0041 03       		.uleb128 0x3
 194 0042 97010000 		.4byte	.LASF9
 195 0046 02       		.byte	0x2
 196 0047 3F       		.byte	0x3f
 197 0048 4C000000 		.4byte	0x4c
 198 004c 02       		.uleb128 0x2
 199 004d 04       		.byte	0x4
 200 004e 05       		.byte	0x5
 201 004f D7000000 		.4byte	.LASF4
 202 0053 02       		.uleb128 0x2
 203 0054 04       		.byte	0x4
 204 0055 07       		.byte	0x7
 205 0056 43000000 		.4byte	.LASF5
 206 005a 02       		.uleb128 0x2
 207 005b 08       		.byte	0x8
 208 005c 05       		.byte	0x5
 209 005d 00000000 		.4byte	.LASF6
 210 0061 02       		.uleb128 0x2
 211 0062 08       		.byte	0x8
 212 0063 07       		.byte	0x7
 213 0064 55000000 		.4byte	.LASF7
 214 0068 04       		.uleb128 0x4
 215 0069 04       		.byte	0x4
 216 006a 05       		.byte	0x5
 217 006b 696E7400 		.ascii	"int\000"
 218 006f 02       		.uleb128 0x2
 219 0070 04       		.byte	0x4
 220 0071 07       		.byte	0x7
 221 0072 21000000 		.4byte	.LASF8
 222 0076 03       		.uleb128 0x3
 223 0077 C4010000 		.4byte	.LASF10
 224 007b 03       		.byte	0x3
 225 007c 2C       		.byte	0x2c
 226 007d 41000000 		.4byte	0x41
 227 0081 05       		.uleb128 0x5
 228 0082 3D000000 		.4byte	.LASF11
 229 0086 04       		.byte	0x4
 230 0087 9201     		.2byte	0x192
 231 0089 2C000000 		.4byte	0x2c
 232 008d 05       		.uleb128 0x5
 233 008e BD010000 		.4byte	.LASF12
 234 0092 04       		.byte	0x4
 235 0093 9301     		.2byte	0x193
 236 0095 3A000000 		.4byte	0x3a
 237 0099 02       		.uleb128 0x2
 238 009a 04       		.byte	0x4
 239 009b 04       		.byte	0x4
 240 009c A1010000 		.4byte	.LASF13
 241 00a0 02       		.uleb128 0x2
 242 00a1 08       		.byte	0x8
 243 00a2 04       		.byte	0x4
 244 00a3 77010000 		.4byte	.LASF14
 245 00a7 02       		.uleb128 0x2
 246 00a8 01       		.byte	0x1
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 8


 247 00a9 08       		.byte	0x8
 248 00aa D2000000 		.4byte	.LASF15
 249 00ae 02       		.uleb128 0x2
 250 00af 04       		.byte	0x4
 251 00b0 07       		.byte	0x7
 252 00b1 CC010000 		.4byte	.LASF16
 253 00b5 06       		.uleb128 0x6
 254 00b6 2E000000 		.4byte	.LASF23
 255 00ba 01       		.byte	0x1
 256 00bb 52       		.byte	0x52
 257 00bc 68000000 		.4byte	0x68
 258 00c0 00000000 		.4byte	.LFB63
 259 00c4 B4000000 		.4byte	.LFE63-.LFB63
 260 00c8 01       		.uleb128 0x1
 261 00c9 9C       		.byte	0x9c
 262 00ca F9000000 		.4byte	0xf9
 263 00ce 07       		.uleb128 0x7
 264 00cf 33000000 		.4byte	.LASF17
 265 00d3 01       		.byte	0x1
 266 00d4 58       		.byte	0x58
 267 00d5 81000000 		.4byte	0x81
 268 00d9 02       		.uleb128 0x2
 269 00da 91       		.byte	0x91
 270 00db 75       		.sleb128 -11
 271 00dc 07       		.uleb128 0x7
 272 00dd 6C000000 		.4byte	.LASF18
 273 00e1 01       		.byte	0x1
 274 00e2 59       		.byte	0x59
 275 00e3 F9000000 		.4byte	0xf9
 276 00e7 02       		.uleb128 0x2
 277 00e8 91       		.byte	0x91
 278 00e9 70       		.sleb128 -16
 279 00ea 07       		.uleb128 0x7
 280 00eb A7010000 		.4byte	.LASF19
 281 00ef 01       		.byte	0x1
 282 00f0 5A       		.byte	0x5a
 283 00f1 8D000000 		.4byte	0x8d
 284 00f5 02       		.uleb128 0x2
 285 00f6 91       		.byte	0x91
 286 00f7 76       		.sleb128 -10
 287 00f8 00       		.byte	0
 288 00f9 08       		.uleb128 0x8
 289 00fa 81000000 		.4byte	0x81
 290 00fe 09010000 		.4byte	0x109
 291 0102 09       		.uleb128 0x9
 292 0103 AE000000 		.4byte	0xae
 293 0107 01       		.byte	0x1
 294 0108 00       		.byte	0
 295 0109 0A       		.uleb128 0xa
 296 010a 7E010000 		.4byte	.LASF24
 297 010e 05       		.byte	0x5
 298 010f 9606     		.2byte	0x696
 299 0111 15010000 		.4byte	0x115
 300 0115 0B       		.uleb128 0xb
 301 0116 76000000 		.4byte	0x76
 302 011a 00       		.byte	0
 303              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 9


 304              	.Ldebug_abbrev0:
 305 0000 01       		.uleb128 0x1
 306 0001 11       		.uleb128 0x11
 307 0002 01       		.byte	0x1
 308 0003 25       		.uleb128 0x25
 309 0004 0E       		.uleb128 0xe
 310 0005 13       		.uleb128 0x13
 311 0006 0B       		.uleb128 0xb
 312 0007 03       		.uleb128 0x3
 313 0008 0E       		.uleb128 0xe
 314 0009 1B       		.uleb128 0x1b
 315 000a 0E       		.uleb128 0xe
 316 000b 55       		.uleb128 0x55
 317 000c 17       		.uleb128 0x17
 318 000d 11       		.uleb128 0x11
 319 000e 01       		.uleb128 0x1
 320 000f 10       		.uleb128 0x10
 321 0010 17       		.uleb128 0x17
 322 0011 00       		.byte	0
 323 0012 00       		.byte	0
 324 0013 02       		.uleb128 0x2
 325 0014 24       		.uleb128 0x24
 326 0015 00       		.byte	0
 327 0016 0B       		.uleb128 0xb
 328 0017 0B       		.uleb128 0xb
 329 0018 3E       		.uleb128 0x3e
 330 0019 0B       		.uleb128 0xb
 331 001a 03       		.uleb128 0x3
 332 001b 0E       		.uleb128 0xe
 333 001c 00       		.byte	0
 334 001d 00       		.byte	0
 335 001e 03       		.uleb128 0x3
 336 001f 16       		.uleb128 0x16
 337 0020 00       		.byte	0
 338 0021 03       		.uleb128 0x3
 339 0022 0E       		.uleb128 0xe
 340 0023 3A       		.uleb128 0x3a
 341 0024 0B       		.uleb128 0xb
 342 0025 3B       		.uleb128 0x3b
 343 0026 0B       		.uleb128 0xb
 344 0027 49       		.uleb128 0x49
 345 0028 13       		.uleb128 0x13
 346 0029 00       		.byte	0
 347 002a 00       		.byte	0
 348 002b 04       		.uleb128 0x4
 349 002c 24       		.uleb128 0x24
 350 002d 00       		.byte	0
 351 002e 0B       		.uleb128 0xb
 352 002f 0B       		.uleb128 0xb
 353 0030 3E       		.uleb128 0x3e
 354 0031 0B       		.uleb128 0xb
 355 0032 03       		.uleb128 0x3
 356 0033 08       		.uleb128 0x8
 357 0034 00       		.byte	0
 358 0035 00       		.byte	0
 359 0036 05       		.uleb128 0x5
 360 0037 16       		.uleb128 0x16
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 10


 361 0038 00       		.byte	0
 362 0039 03       		.uleb128 0x3
 363 003a 0E       		.uleb128 0xe
 364 003b 3A       		.uleb128 0x3a
 365 003c 0B       		.uleb128 0xb
 366 003d 3B       		.uleb128 0x3b
 367 003e 05       		.uleb128 0x5
 368 003f 49       		.uleb128 0x49
 369 0040 13       		.uleb128 0x13
 370 0041 00       		.byte	0
 371 0042 00       		.byte	0
 372 0043 06       		.uleb128 0x6
 373 0044 2E       		.uleb128 0x2e
 374 0045 01       		.byte	0x1
 375 0046 3F       		.uleb128 0x3f
 376 0047 19       		.uleb128 0x19
 377 0048 03       		.uleb128 0x3
 378 0049 0E       		.uleb128 0xe
 379 004a 3A       		.uleb128 0x3a
 380 004b 0B       		.uleb128 0xb
 381 004c 3B       		.uleb128 0x3b
 382 004d 0B       		.uleb128 0xb
 383 004e 49       		.uleb128 0x49
 384 004f 13       		.uleb128 0x13
 385 0050 11       		.uleb128 0x11
 386 0051 01       		.uleb128 0x1
 387 0052 12       		.uleb128 0x12
 388 0053 06       		.uleb128 0x6
 389 0054 40       		.uleb128 0x40
 390 0055 18       		.uleb128 0x18
 391 0056 9642     		.uleb128 0x2116
 392 0058 19       		.uleb128 0x19
 393 0059 01       		.uleb128 0x1
 394 005a 13       		.uleb128 0x13
 395 005b 00       		.byte	0
 396 005c 00       		.byte	0
 397 005d 07       		.uleb128 0x7
 398 005e 34       		.uleb128 0x34
 399 005f 00       		.byte	0
 400 0060 03       		.uleb128 0x3
 401 0061 0E       		.uleb128 0xe
 402 0062 3A       		.uleb128 0x3a
 403 0063 0B       		.uleb128 0xb
 404 0064 3B       		.uleb128 0x3b
 405 0065 0B       		.uleb128 0xb
 406 0066 49       		.uleb128 0x49
 407 0067 13       		.uleb128 0x13
 408 0068 02       		.uleb128 0x2
 409 0069 18       		.uleb128 0x18
 410 006a 00       		.byte	0
 411 006b 00       		.byte	0
 412 006c 08       		.uleb128 0x8
 413 006d 01       		.uleb128 0x1
 414 006e 01       		.byte	0x1
 415 006f 49       		.uleb128 0x49
 416 0070 13       		.uleb128 0x13
 417 0071 01       		.uleb128 0x1
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 11


 418 0072 13       		.uleb128 0x13
 419 0073 00       		.byte	0
 420 0074 00       		.byte	0
 421 0075 09       		.uleb128 0x9
 422 0076 21       		.uleb128 0x21
 423 0077 00       		.byte	0
 424 0078 49       		.uleb128 0x49
 425 0079 13       		.uleb128 0x13
 426 007a 2F       		.uleb128 0x2f
 427 007b 0B       		.uleb128 0xb
 428 007c 00       		.byte	0
 429 007d 00       		.byte	0
 430 007e 0A       		.uleb128 0xa
 431 007f 34       		.uleb128 0x34
 432 0080 00       		.byte	0
 433 0081 03       		.uleb128 0x3
 434 0082 0E       		.uleb128 0xe
 435 0083 3A       		.uleb128 0x3a
 436 0084 0B       		.uleb128 0xb
 437 0085 3B       		.uleb128 0x3b
 438 0086 05       		.uleb128 0x5
 439 0087 49       		.uleb128 0x49
 440 0088 13       		.uleb128 0x13
 441 0089 3F       		.uleb128 0x3f
 442 008a 19       		.uleb128 0x19
 443 008b 3C       		.uleb128 0x3c
 444 008c 19       		.uleb128 0x19
 445 008d 00       		.byte	0
 446 008e 00       		.byte	0
 447 008f 0B       		.uleb128 0xb
 448 0090 35       		.uleb128 0x35
 449 0091 00       		.byte	0
 450 0092 49       		.uleb128 0x49
 451 0093 13       		.uleb128 0x13
 452 0094 00       		.byte	0
 453 0095 00       		.byte	0
 454 0096 00       		.byte	0
 455              		.section	.debug_aranges,"",%progbits
 456 0000 1C000000 		.4byte	0x1c
 457 0004 0200     		.2byte	0x2
 458 0006 00000000 		.4byte	.Ldebug_info0
 459 000a 04       		.byte	0x4
 460 000b 00       		.byte	0
 461 000c 0000     		.2byte	0
 462 000e 0000     		.2byte	0
 463 0010 00000000 		.4byte	.LFB63
 464 0014 B4000000 		.4byte	.LFE63-.LFB63
 465 0018 00000000 		.4byte	0
 466 001c 00000000 		.4byte	0
 467              		.section	.debug_ranges,"",%progbits
 468              	.Ldebug_ranges0:
 469 0000 00000000 		.4byte	.LFB63
 470 0004 B4000000 		.4byte	.LFE63
 471 0008 00000000 		.4byte	0
 472 000c 00000000 		.4byte	0
 473              		.section	.debug_line,"",%progbits
 474              	.Ldebug_line0:
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 12


 475 0000 7E010000 		.section	.debug_str,"MS",%progbits,1
 475      02004901 
 475      00000201 
 475      FB0E0D00 
 475      01010101 
 476              	.LASF6:
 477 0000 6C6F6E67 		.ascii	"long long int\000"
 477      206C6F6E 
 477      6720696E 
 477      7400
 478              	.LASF3:
 479 000e 73686F72 		.ascii	"short unsigned int\000"
 479      7420756E 
 479      7369676E 
 479      65642069 
 479      6E7400
 480              	.LASF8:
 481 0021 756E7369 		.ascii	"unsigned int\000"
 481      676E6564 
 481      20696E74 
 481      00
 482              	.LASF23:
 483 002e 6D61696E 		.ascii	"main\000"
 483      00
 484              	.LASF17:
 485 0033 62797465 		.ascii	"byteCount\000"
 485      436F756E 
 485      7400
 486              	.LASF11:
 487 003d 75696E74 		.ascii	"uint8\000"
 487      3800
 488              	.LASF5:
 489 0043 6C6F6E67 		.ascii	"long unsigned int\000"
 489      20756E73 
 489      69676E65 
 489      6420696E 
 489      7400
 490              	.LASF7:
 491 0055 6C6F6E67 		.ascii	"long long unsigned int\000"
 491      206C6F6E 
 491      6720756E 
 491      7369676E 
 491      65642069 
 492              	.LASF18:
 493 006c 73616D70 		.ascii	"sample_segment\000"
 493      6C655F73 
 493      65676D65 
 493      6E7400
 494              	.LASF22:
 495 007b 433A5C55 		.ascii	"C:\\Users\\robert\\Documents\\PSoC Creator\\TestWor"
 495      73657273 
 495      5C726F62 
 495      6572745C 
 495      446F6375 
 496 00a9 6B737061 		.ascii	"kspace\\DelSig_I2CS01.cydsn\000"
 496      63655C44 
 496      656C5369 
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 13


 496      675F4932 
 496      43533031 
 497              	.LASF1:
 498 00c4 756E7369 		.ascii	"unsigned char\000"
 498      676E6564 
 498      20636861 
 498      7200
 499              	.LASF15:
 500 00d2 63686172 		.ascii	"char\000"
 500      00
 501              	.LASF4:
 502 00d7 6C6F6E67 		.ascii	"long int\000"
 502      20696E74 
 502      00
 503              	.LASF20:
 504 00e0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 504      4320342E 
 504      392E3320 
 504      32303135 
 504      30333033 
 505 0113 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 505      20726576 
 505      6973696F 
 505      6E203232 
 505      31323230 
 506 0146 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 506      66756E63 
 506      74696F6E 
 506      2D736563 
 506      74696F6E 
 507              	.LASF21:
 508 016e 2E5C6D61 		.ascii	".\\main.c\000"
 508      696E2E63 
 508      00
 509              	.LASF14:
 510 0177 646F7562 		.ascii	"double\000"
 510      6C6500
 511              	.LASF24:
 512 017e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 512      52784275 
 512      66666572 
 512      00
 513              	.LASF0:
 514 018b 7369676E 		.ascii	"signed char\000"
 514      65642063 
 514      68617200 
 515              	.LASF9:
 516 0197 5F5F696E 		.ascii	"__int32_t\000"
 516      7433325F 
 516      7400
 517              	.LASF13:
 518 01a1 666C6F61 		.ascii	"float\000"
 518      7400
 519              	.LASF19:
 520 01a7 73616D70 		.ascii	"sample_full\000"
 520      6C655F66 
 520      756C6C00 
ARM GAS  C:\Users\robert\AppData\Local\Temp\ccfy3IUH.s 			page 14


 521              	.LASF2:
 522 01b3 73686F72 		.ascii	"short int\000"
 522      7420696E 
 522      7400
 523              	.LASF12:
 524 01bd 75696E74 		.ascii	"uint16\000"
 524      313600
 525              	.LASF10:
 526 01c4 696E7433 		.ascii	"int32_t\000"
 526      325F7400 
 527              	.LASF16:
 528 01cc 73697A65 		.ascii	"sizetype\000"
 528      74797065 
 528      00
 529              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
